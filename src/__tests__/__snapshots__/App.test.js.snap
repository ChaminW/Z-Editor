// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="head"
        >
          <div
            className="logo"
          >
            Z-Editor
          </div>
          <a
            className="github-button"
            href="https://github.com/Z-Editor/Z-Editor"
            rel="noopener noreferrer"
            target="_blank"
          >
            View on Github
          </a>
          <button
            className="button"
            id="print"
            onClick={[Function]}
          >
            Print
          </button>
          <button
            className="button"
            id="download"
            onClick={[Function]}
          >
            Download
          </button>
          <div>
            <label
              className="button"
              htmlFor="upload-file"
              style={
                Object {
                  "fontFamily": "sans-serif",
                  "fontSize": "15px",
                }
              }
            >
              Import
            </label>
            <input
              className="button"
              id="upload-file"
              name="myFile"
              onChange={[Function]}
              style={
                Object {
                  "opacity": 0,
                  "position": "absolute",
                  "zIndex": -1,
                }
              }
              type="file"
            />
          </div>
        </div>,
        <ZEditor
          setDownloadState={[Function]}
        />,
      ],
      "className": "flex-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="logo"
            >
              Z-Editor
            </div>,
            <a
              className="github-button"
              href="https://github.com/Z-Editor/Z-Editor"
              rel="noopener noreferrer"
              target="_blank"
            >
              View on Github
            </a>,
            <button
              className="button"
              id="print"
              onClick={[Function]}
            >
              Print
            </button>,
            <button
              className="button"
              id="download"
              onClick={[Function]}
            >
              Download
            </button>,
            <div>
              <label
                className="button"
                htmlFor="upload-file"
                style={
                  Object {
                    "fontFamily": "sans-serif",
                    "fontSize": "15px",
                  }
                }
              >
                Import
              </label>
              <input
                className="button"
                id="upload-file"
                name="myFile"
                onChange={[Function]}
                style={
                  Object {
                    "opacity": 0,
                    "position": "absolute",
                    "zIndex": -1,
                  }
                }
                type="file"
              />
            </div>,
          ],
          "className": "head",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Z-Editor",
              "className": "logo",
            },
            "ref": null,
            "rendered": "Z-Editor",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "View on Github",
              "className": "github-button",
              "href": "https://github.com/Z-Editor/Z-Editor",
              "rel": "noopener noreferrer",
              "target": "_blank",
            },
            "ref": null,
            "rendered": "View on Github",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Print",
              "className": "button",
              "id": "print",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Print",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Download",
              "className": "button",
              "id": "download",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Download",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="button"
                  htmlFor="upload-file"
                  style={
                    Object {
                      "fontFamily": "sans-serif",
                      "fontSize": "15px",
                    }
                  }
                >
                  Import
                </label>,
                <input
                  className="button"
                  id="upload-file"
                  name="myFile"
                  onChange={[Function]}
                  style={
                    Object {
                      "opacity": 0,
                      "position": "absolute",
                      "zIndex": -1,
                    }
                  }
                  type="file"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Import",
                  "className": "button",
                  "htmlFor": "upload-file",
                  "style": Object {
                    "fontFamily": "sans-serif",
                    "fontSize": "15px",
                  },
                },
                "ref": null,
                "rendered": "Import",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "button",
                  "id": "upload-file",
                  "name": "myFile",
                  "onChange": [Function],
                  "style": Object {
                    "opacity": 0,
                    "position": "absolute",
                    "zIndex": -1,
                  },
                  "type": "file",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "setDownloadState": [Function],
        },
        "ref": Object {
          "current": null,
        },
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="head"
          >
            <div
              className="logo"
            >
              Z-Editor
            </div>
            <a
              className="github-button"
              href="https://github.com/Z-Editor/Z-Editor"
              rel="noopener noreferrer"
              target="_blank"
            >
              View on Github
            </a>
            <button
              className="button"
              id="print"
              onClick={[Function]}
            >
              Print
            </button>
            <button
              className="button"
              id="download"
              onClick={[Function]}
            >
              Download
            </button>
            <div>
              <label
                className="button"
                htmlFor="upload-file"
                style={
                  Object {
                    "fontFamily": "sans-serif",
                    "fontSize": "15px",
                  }
                }
              >
                Import
              </label>
              <input
                className="button"
                id="upload-file"
                name="myFile"
                onChange={[Function]}
                style={
                  Object {
                    "opacity": 0,
                    "position": "absolute",
                    "zIndex": -1,
                  }
                }
                type="file"
              />
            </div>
          </div>,
          <ZEditor
            setDownloadState={[Function]}
          />,
        ],
        "className": "flex-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="logo"
              >
                Z-Editor
              </div>,
              <a
                className="github-button"
                href="https://github.com/Z-Editor/Z-Editor"
                rel="noopener noreferrer"
                target="_blank"
              >
                View on Github
              </a>,
              <button
                className="button"
                id="print"
                onClick={[Function]}
              >
                Print
              </button>,
              <button
                className="button"
                id="download"
                onClick={[Function]}
              >
                Download
              </button>,
              <div>
                <label
                  className="button"
                  htmlFor="upload-file"
                  style={
                    Object {
                      "fontFamily": "sans-serif",
                      "fontSize": "15px",
                    }
                  }
                >
                  Import
                </label>
                <input
                  className="button"
                  id="upload-file"
                  name="myFile"
                  onChange={[Function]}
                  style={
                    Object {
                      "opacity": 0,
                      "position": "absolute",
                      "zIndex": -1,
                    }
                  }
                  type="file"
                />
              </div>,
            ],
            "className": "head",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Z-Editor",
                "className": "logo",
              },
              "ref": null,
              "rendered": "Z-Editor",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "View on Github",
                "className": "github-button",
                "href": "https://github.com/Z-Editor/Z-Editor",
                "rel": "noopener noreferrer",
                "target": "_blank",
              },
              "ref": null,
              "rendered": "View on Github",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Print",
                "className": "button",
                "id": "print",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Print",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Download",
                "className": "button",
                "id": "download",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Download",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    className="button"
                    htmlFor="upload-file"
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                        "fontSize": "15px",
                      }
                    }
                  >
                    Import
                  </label>,
                  <input
                    className="button"
                    id="upload-file"
                    name="myFile"
                    onChange={[Function]}
                    style={
                      Object {
                        "opacity": 0,
                        "position": "absolute",
                        "zIndex": -1,
                      }
                    }
                    type="file"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Import",
                    "className": "button",
                    "htmlFor": "upload-file",
                    "style": Object {
                      "fontFamily": "sans-serif",
                      "fontSize": "15px",
                    },
                  },
                  "ref": null,
                  "rendered": "Import",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "button",
                    "id": "upload-file",
                    "name": "myFile",
                    "onChange": [Function],
                    "style": Object {
                      "opacity": 0,
                      "position": "absolute",
                      "zIndex": -1,
                    },
                    "type": "file",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "setDownloadState": [Function],
          },
          "ref": Object {
            "current": null,
          },
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
